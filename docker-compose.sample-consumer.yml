version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: sample
    ports:
      - "5432:5432"

  sample-consumer:
    build:
      context: .
      dockerfile: services/sample-consumer/Dockerfile
    environment:
      KAFKA_BOOTSTRAP: kafka:29092
      KAFKA_TOPIC: command.events
      CONSUMER_GROUP: sample-command-consumer
      IDEMP_STORE: ${IDEMP_STORE:-memory} # set to 'redis' or 'postgres' to enable external stores
      REDIS_URL: redis://redis:6379/0
      POSTGRES_DSN: postgresql://user:password@postgres:5432/sample
      METRICS_PORT: "9000"
    depends_on:
      - kafka
      - redis
      - postgres
    ports:
      - "9000:9000"
