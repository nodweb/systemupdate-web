name: OPA Deny E2E

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
    paths:
      - 'docker-compose.yml'
      - 'gateway/**'
      - 'services/**'
      - 'tests/e2e/**'
      - '.github/workflows/opa-deny-e2e.yml'

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create CI override (enable OPA on command-service)
        run: |
          cat > ci.opa.yml <<'YAML'
          services:
            command-service:
              environment:
                OPA_REQUIRED: "1"
                OPA_URL: "http://opa:8181/v1/data/systemupdate/allow"
          YAML

      - name: Start minimal stack + OPA
        run: |
          docker compose -f docker-compose.yml -f ci.opa.yml up -d postgres redis opa command-service gateway

      - name: Wait for services
        run: |
          for i in {1..60}; do curl -fsS http://localhost:8004/healthz && break || sleep 2; done
          for i in {1..60}; do curl -fsS http://localhost:8000 || curl -fsS http://localhost:8001/status && break || sleep 2; done
          # Ensure OPA is ready
          for i in {1..60}; do curl -fsS http://localhost:8181/health && break || sleep 2; done

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Playwright deps
        working-directory: systemupdate-web/tests/e2e
        run: |
          npm ci || npm install
          npx playwright install --with-deps chromium

      - name: Run OPA deny E2E (Playwright)
        working-directory: systemupdate-web/tests/e2e
        env:
          OPA_E2E: "1"
          GATEWAY_URL: "http://localhost:8000"
        run: |
          npx playwright test tests/opa-deny.spec.ts --reporter=dot

      - name: Teardown
        if: always()
        run: docker compose -f docker-compose.yml -f ci.opa.yml down -v
